security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Fournisseur d'utilisateurs, en utilisant Doctrine pour récupérer les utilisateurs de la base de données
    providers:
        users_from_db: # Utiliser un provider basé sur la base de données
            entity:
                class: App\Entity\User    # Assure-toi que ta classe d'entité User est correcte
                property: email            # Utiliser 'email' pour identifier l'utilisateur

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_from_db  # Utiliser le provider basé sur la base de données
            custom_authenticator: App\Security\UsersAuthenticator
            logout:
                path: app_logout
                # où rediriger après la déconnexion
                # target: app_any_route
                target: /connexion  # Redirige vers la page de connexion après la déconnexion
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800  # 7 jours
                path: /

            # Options de sécurité supplémentaires (si nécessaire)
            # switch_user: true

    # Contrôle d'accès
    access_control:
        # Exemple d'accès restreint à une section de l'application
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }


    # Configuration pour les tests
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Valeur la plus basse pour bcrypt (utilisé pour les tests)
                time_cost: 3
                memory_cost: 10
